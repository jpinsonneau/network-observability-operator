
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: flowcollectors.flows.netobserv.io
spec:
  group: flows.netobserv.io
  names:
    kind: FlowCollector
    listKind: FlowCollectorList
    plural: flowcollectors
    singular: flowcollector
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FlowCollector is the Schema for the flowcollectors API, which
          pilots and configures netflow collection.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FlowCollectorSpec defines the desired state of FlowCollector
            properties:
              agent:
                default: ipfix
                description: Agent selects the flows' tracing agent. Possible values
                  are "ipfix" (default) to use the OpenVSwitch IPFIX collector (only
                  valid if your cluster uses OVN-Kubernetes CNI) or "ebpf" to use
                  NetObserv's eBPF agent. The eBPF agent is not officially released
                  yet, it is provided as a preview.
                enum:
                - ipfix
                - ebpf
                type: string
              clusterNetworkOperator:
                description: ClusterNetworkOperator contains settings related to the
                  cluster network operator
                properties:
                  namespace:
                    default: openshift-network-operator
                    description: Namespace  where the configmap is going to be deployed.
                    type: string
                type: object
              consolePlugin:
                description: ConsolePlugin contains settings related to the console
                  dynamic plugin
                properties:
                  hpa:
                    description: HPA spec of an horizontal pod autoscaler to set up
                      for the plugin Deployment.
                    properties:
                      maxReplicas:
                        description: upper limit for the number of pods that can be
                          set by the autoscaler; cannot be smaller than MinReplicas.
                        format: int32
                        type: integer
                      metrics:
                        description: Metrics used by the pod autoscaler
                        items:
                          description: MetricSpec specifies how to scale based on
                            a single metric (only `type` and one other matching field
                            should be set at once).
                          properties:
                            containerResource:
                              description: container resource refers to a resource
                                metric (such as those specified in requests and limits)
                                known to Kubernetes describing a single container
                                in each pod of the current scale target (e.g. CPU
                                or memory). Such metrics are built in to Kubernetes,
                                and have special scaling options on top of those available
                                to normal per-pod metrics using the "pods" source.
                                This is an alpha feature and can be enabled by the
                                HPAContainerMetrics feature flag.
                              properties:
                                container:
                                  description: container is the name of the container
                                    in the pods of the scaling target
                                  type: string
                                name:
                                  description: name is the name of the resource in
                                    question.
                                  type: string
                                target:
                                  description: target specifies the target value for
                                    the given metric
                                  properties:
                                    averageUtilization:
                                      description: averageUtilization is the target
                                        value of the average of the resource metric
                                        across all relevant pods, represented as a
                                        percentage of the requested value of the resource
                                        for the pods. Currently only valid for Resource
                                        metric source type
                                      format: int32
                                      type: integer
                                    averageValue:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: averageValue is the target value
                                        of the average of the metric across all relevant
                                        pods (as a quantity)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    type:
                                      description: type represents whether the metric
                                        type is Utilization, Value, or AverageValue
                                      type: string
                                    value:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: value is the target value of the
                                        metric (as a quantity).
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - type
                                  type: object
                              required:
                              - container
                              - name
                              - target
                              type: object
                            external:
                              description: external refers to a global metric that
                                is not associated with any Kubernetes object. It allows
                                autoscaling based on information coming from components
                                running outside of cluster (for example length of
                                queue in cloud messaging service, or QPS from loadbalancer
                                running outside of cluster).
                              properties:
                                metric:
                                  description: metric identifies the target metric
                                    by name and selector
                                  properties:
                                    name:
                                      description: name is the name of the given metric
                                      type: string
                                    selector:
                                      description: selector is the string-encoded
                                        form of a standard kubernetes label selector
                                        for the given metric When set, it is passed
                                        as an additional parameter to the metrics
                                        server for more specific metrics scoping.
                                        When unset, just the metricName will be used
                                        to gather metrics.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                target:
                                  description: target specifies the target value for
                                    the given metric
                                  properties:
                                    averageUtilization:
                                      description: averageUtilization is the target
                                        value of the average of the resource metric
                                        across all relevant pods, represented as a
                                        percentage of the requested value of the resource
                                        for the pods. Currently only valid for Resource
                                        metric source type
                                      format: int32
                                      type: integer
                                    averageValue:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: averageValue is the target value
                                        of the average of the metric across all relevant
                                        pods (as a quantity)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    type:
                                      description: type represents whether the metric
                                        type is Utilization, Value, or AverageValue
                                      type: string
                                    value:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: value is the target value of the
                                        metric (as a quantity).
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - type
                                  type: object
                              required:
                              - metric
                              - target
                              type: object
                            object:
                              description: object refers to a metric describing a
                                single kubernetes object (for example, hits-per-second
                                on an Ingress object).
                              properties:
                                describedObject:
                                  description: CrossVersionObjectReference contains
                                    enough information to let you identify the referred
                                    resource.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent
                                      type: string
                                    kind:
                                      description: 'Kind of the referent; More info:
                                        https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                                      type: string
                                    name:
                                      description: 'Name of the referent; More info:
                                        http://kubernetes.io/docs/user-guide/identifiers#names'
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                                metric:
                                  description: metric identifies the target metric
                                    by name and selector
                                  properties:
                                    name:
                                      description: name is the name of the given metric
                                      type: string
                                    selector:
                                      description: selector is the string-encoded
                                        form of a standard kubernetes label selector
                                        for the given metric When set, it is passed
                                        as an additional parameter to the metrics
                                        server for more specific metrics scoping.
                                        When unset, just the metricName will be used
                                        to gather metrics.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                target:
                                  description: target specifies the target value for
                                    the given metric
                                  properties:
                                    averageUtilization:
                                      description: averageUtilization is the target
                                        value of the average of the resource metric
                                        across all relevant pods, represented as a
                                        percentage of the requested value of the resource
                                        for the pods. Currently only valid for Resource
                                        metric source type
                                      format: int32
                                      type: integer
                                    averageValue:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: averageValue is the target value
                                        of the average of the metric across all relevant
                                        pods (as a quantity)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    type:
                                      description: type represents whether the metric
                                        type is Utilization, Value, or AverageValue
                                      type: string
                                    value:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: value is the target value of the
                                        metric (as a quantity).
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - type
                                  type: object
                              required:
                              - describedObject
                              - metric
                              - target
                              type: object
                            pods:
                              description: pods refers to a metric describing each
                                pod in the current scale target (for example, transactions-processed-per-second).  The
                                values will be averaged together before being compared
                                to the target value.
                              properties:
                                metric:
                                  description: metric identifies the target metric
                                    by name and selector
                                  properties:
                                    name:
                                      description: name is the name of the given metric
                                      type: string
                                    selector:
                                      description: selector is the string-encoded
                                        form of a standard kubernetes label selector
                                        for the given metric When set, it is passed
                                        as an additional parameter to the metrics
                                        server for more specific metrics scoping.
                                        When unset, just the metricName will be used
                                        to gather metrics.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                target:
                                  description: target specifies the target value for
                                    the given metric
                                  properties:
                                    averageUtilization:
                                      description: averageUtilization is the target
                                        value of the average of the resource metric
                                        across all relevant pods, represented as a
                                        percentage of the requested value of the resource
                                        for the pods. Currently only valid for Resource
                                        metric source type
                                      format: int32
                                      type: integer
                                    averageValue:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: averageValue is the target value
                                        of the average of the metric across all relevant
                                        pods (as a quantity)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    type:
                                      description: type represents whether the metric
                                        type is Utilization, Value, or AverageValue
                                      type: string
                                    value:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: value is the target value of the
                                        metric (as a quantity).
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - type
                                  type: object
                              required:
                              - metric
                              - target
                              type: object
                            resource:
                              description: resource refers to a resource metric (such
                                as those specified in requests and limits) known to
                                Kubernetes describing each pod in the current scale
                                target (e.g. CPU or memory). Such metrics are built
                                in to Kubernetes, and have special scaling options
                                on top of those available to normal per-pod metrics
                                using the "pods" source.
                              properties:
                                name:
                                  description: name is the name of the resource in
                                    question.
                                  type: string
                                target:
                                  description: target specifies the target value for
                                    the given metric
                                  properties:
                                    averageUtilization:
                                      description: averageUtilization is the target
                                        value of the average of the resource metric
                                        across all relevant pods, represented as a
                                        percentage of the requested value of the resource
                                        for the pods. Currently only valid for Resource
                                        metric source type
                                      format: int32
                                      type: integer
                                    averageValue:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: averageValue is the target value
                                        of the average of the metric across all relevant
                                        pods (as a quantity)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    type:
                                      description: type represents whether the metric
                                        type is Utilization, Value, or AverageValue
                                      type: string
                                    value:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: value is the target value of the
                                        metric (as a quantity).
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - type
                                  type: object
                              required:
                              - name
                              - target
                              type: object
                            type:
                              description: 'type is the type of metric source.  It
                                should be one of "ContainerResource", "External",
                                "Object", "Pods" or "Resource", each mapping to a
                                matching field in the object. Note: "ContainerResource"
                                type is available on when the feature-gate HPAContainerMetrics
                                is enabled'
                              type: string
                          required:
                          - type
                          type: object
                        type: array
                      minReplicas:
                        description: minReplicas is the lower limit for the number
                          of replicas to which the autoscaler can scale down.  It
                          defaults to 1 pod.  minReplicas is allowed to be 0 if the
                          alpha feature gate HPAScaleToZero is enabled and at least
                          one Object or External metric is configured.  Scaling is
                          active as long as at least one metric value is available.
                        format: int32
                        type: integer
                    required:
                    - maxReplicas
                    type: object
                  image:
                    default: quay.io/netobserv/network-observability-console-plugin:main
                    description: Image is the plugin image (including domain and tag)
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: ImagePullPolicy is the Kubernetes pull policy for
                      the image defined above
                    enum:
                    - IfNotPresent
                    - Always
                    - Never
                    type: string
                  logLevel:
                    default: info
                    description: LogLevel defines the log level for the console plugin
                      backend
                    enum:
                    - trace
                    - debug
                    - info
                    - warn
                    - error
                    - fatal
                    - panic
                    type: string
                  port:
                    default: 9001
                    description: Port is the plugin service port
                    format: int32
                    maximum: 65535
                    minimum: 1
                    type: integer
                  portNaming:
                    default:
                      enable: true
                    description: Configuration of the port to service name translation
                    properties:
                      enable:
                        default: true
                        description: Should this feature be enabled
                        type: boolean
                      portNames:
                        additionalProperties:
                          type: string
                        description: 'Additional port name to use in the console E.g.
                          portNames: {"3100": "loki"}'
                        type: object
                    type: object
                  register:
                    default: true
                    description: 'Automatically register the provided console plugin
                      with the OpenShift Console operator. When set to false, you
                      can still register it manually by editing console.operator.openshift.io/cluster.
                      E.g: oc patch console.operator.openshift.io cluster --type=''json''
                      -p ''[{"op": "add", "path": "/spec/plugins/-", "value": "network-observability-plugin"}]'''
                    type: boolean
                  replicas:
                    default: 1
                    description: Replicas defines the number of replicas (pods) to
                      start.
                    format: int32
                    minimum: 0
                    type: integer
                  resources:
                    default:
                      limits:
                        memory: 100Mi
                      requests:
                        cpu: 100m
                        memory: 50Mi
                    description: 'Compute Resources required by this container. Cannot
                      be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                required:
                - register
                type: object
              ebpf:
                default:
                  imagePullPolicy: IfNotPresent
                description: EBPF contains the settings of an eBPF-based flow reporter  when
                  the "agent" property is set to "ebpf".
                properties:
                  cacheActiveTimeout:
                    default: 5s
                    description: CacheActiveTimeout is the max period during which
                      the reporter will aggregate flows before sending
                    pattern: ^\d+(ns|ms|s|m)?$
                    type: string
                  cacheMaxFlows:
                    default: 1000
                    description: CacheMaxFlows is the max number of flows in an aggregate;
                      when reached, the reporter sends the flows
                    format: int32
                    minimum: 1
                    type: integer
                  env:
                    additionalProperties:
                      type: string
                    description: Env allows passing custom environment variables to
                      the NetObserv Agent. Useful for passing some very concrete performance-tuning
                      options (e.g. GOGC, GOMAXPROCS) that shouldn't be publicly exposed
                      as part of the FlowCollector descriptor, as they are only useful
                      in edge debug/support scenarios.
                    type: object
                  excludeInterfaces:
                    default:
                    - lo
                    description: ExcludeInterfaces contains the interface names that
                      will be excluded from flow tracing. If an entry is enclosed
                      by slashes (e.g. `/br-/`), it will match as regular expression,
                      otherwise it will be matched as a case-sensitive string.
                    items:
                      type: string
                    type: array
                  image:
                    default: quay.io/netobserv/netobserv-ebpf-agent:main
                    description: Image is the NetObserv Agent image (including domain
                      and tag)
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: ImagePullPolicy is the Kubernetes pull policy for
                      the image defined above
                    enum:
                    - IfNotPresent
                    - Always
                    - Never
                    type: string
                  interfaces:
                    description: Interfaces contains the interface names from where
                      flows will be collected. If empty, the agent will fetch all
                      the interfaces in the system, excepting the ones listed in ExcludeInterfaces.
                      If an entry is enclosed by slashes (e.g. `/br-/`), it will match
                      as regular expression, otherwise it will be matched as a case-sensitive
                      string.
                    items:
                      type: string
                    type: array
                  logLevel:
                    default: info
                    description: LogLevel defines the log level for the NetObserv
                      eBPF Agent
                    enum:
                    - trace
                    - debug
                    - info
                    - warn
                    - error
                    - fatal
                    - panic
                    type: string
                  resources:
                    description: 'Compute Resources required by this container. Cannot
                      be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  sampling:
                    description: Sampling is the sampling rate on the reporter. 100
                      means one flow on 100 is sent. 0 or 1 means disabled.
                    format: int32
                    type: integer
                type: object
              flowlogsPipeline:
                description: FlowlogsPipeline contains settings related to the flowlogs-pipeline
                  component
                properties:
                  enableKubeProbes:
                    default: true
                    description: EnableKubeProbes is a flag to enable or disable Kubernetes
                      liveness/readiness probes
                    type: boolean
                  healthPort:
                    default: 8080
                    description: HealthPort is a collector HTTP port in the Pod that
                      exposes the health check API
                    format: int32
                    maximum: 65535
                    minimum: 1
                    type: integer
                  hpa:
                    description: HPA spec of an horizontal pod autoscaler to set up
                      for the collector Deployment. Ignored for DaemonSet.
                    properties:
                      maxReplicas:
                        description: upper limit for the number of pods that can be
                          set by the autoscaler; cannot be smaller than MinReplicas.
                        format: int32
                        type: integer
                      metrics:
                        description: Metrics used by the pod autoscaler
                        items:
                          description: MetricSpec specifies how to scale based on
                            a single metric (only `type` and one other matching field
                            should be set at once).
                          properties:
                            containerResource:
                              description: container resource refers to a resource
                                metric (such as those specified in requests and limits)
                                known to Kubernetes describing a single container
                                in each pod of the current scale target (e.g. CPU
                                or memory). Such metrics are built in to Kubernetes,
                                and have special scaling options on top of those available
                                to normal per-pod metrics using the "pods" source.
                                This is an alpha feature and can be enabled by the
                                HPAContainerMetrics feature flag.
                              properties:
                                container:
                                  description: container is the name of the container
                                    in the pods of the scaling target
                                  type: string
                                name:
                                  description: name is the name of the resource in
                                    question.
                                  type: string
                                target:
                                  description: target specifies the target value for
                                    the given metric
                                  properties:
                                    averageUtilization:
                                      description: averageUtilization is the target
                                        value of the average of the resource metric
                                        across all relevant pods, represented as a
                                        percentage of the requested value of the resource
                                        for the pods. Currently only valid for Resource
                                        metric source type
                                      format: int32
                                      type: integer
                                    averageValue:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: averageValue is the target value
                                        of the average of the metric across all relevant
                                        pods (as a quantity)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    type:
                                      description: type represents whether the metric
                                        type is Utilization, Value, or AverageValue
                                      type: string
                                    value:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: value is the target value of the
                                        metric (as a quantity).
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - type
                                  type: object
                              required:
                              - container
                              - name
                              - target
                              type: object
                            external:
                              description: external refers to a global metric that
                                is not associated with any Kubernetes object. It allows
                                autoscaling based on information coming from components
                                running outside of cluster (for example length of
                                queue in cloud messaging service, or QPS from loadbalancer
                                running outside of cluster).
                              properties:
                                metric:
                                  description: metric identifies the target metric
                                    by name and selector
                                  properties:
                                    name:
                                      description: name is the name of the given metric
                                      type: string
                                    selector:
                                      description: selector is the string-encoded
                                        form of a standard kubernetes label selector
                                        for the given metric When set, it is passed
                                        as an additional parameter to the metrics
                                        server for more specific metrics scoping.
                                        When unset, just the metricName will be used
                                        to gather metrics.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                target:
                                  description: target specifies the target value for
                                    the given metric
                                  properties:
                                    averageUtilization:
                                      description: averageUtilization is the target
                                        value of the average of the resource metric
                                        across all relevant pods, represented as a
                                        percentage of the requested value of the resource
                                        for the pods. Currently only valid for Resource
                                        metric source type
                                      format: int32
                                      type: integer
                                    averageValue:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: averageValue is the target value
                                        of the average of the metric across all relevant
                                        pods (as a quantity)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    type:
                                      description: type represents whether the metric
                                        type is Utilization, Value, or AverageValue
                                      type: string
                                    value:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: value is the target value of the
                                        metric (as a quantity).
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - type
                                  type: object
                              required:
                              - metric
                              - target
                              type: object
                            object:
                              description: object refers to a metric describing a
                                single kubernetes object (for example, hits-per-second
                                on an Ingress object).
                              properties:
                                describedObject:
                                  description: CrossVersionObjectReference contains
                                    enough information to let you identify the referred
                                    resource.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent
                                      type: string
                                    kind:
                                      description: 'Kind of the referent; More info:
                                        https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                                      type: string
                                    name:
                                      description: 'Name of the referent; More info:
                                        http://kubernetes.io/docs/user-guide/identifiers#names'
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                                metric:
                                  description: metric identifies the target metric
                                    by name and selector
                                  properties:
                                    name:
                                      description: name is the name of the given metric
                                      type: string
                                    selector:
                                      description: selector is the string-encoded
                                        form of a standard kubernetes label selector
                                        for the given metric When set, it is passed
                                        as an additional parameter to the metrics
                                        server for more specific metrics scoping.
                                        When unset, just the metricName will be used
                                        to gather metrics.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                target:
                                  description: target specifies the target value for
                                    the given metric
                                  properties:
                                    averageUtilization:
                                      description: averageUtilization is the target
                                        value of the average of the resource metric
                                        across all relevant pods, represented as a
                                        percentage of the requested value of the resource
                                        for the pods. Currently only valid for Resource
                                        metric source type
                                      format: int32
                                      type: integer
                                    averageValue:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: averageValue is the target value
                                        of the average of the metric across all relevant
                                        pods (as a quantity)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    type:
                                      description: type represents whether the metric
                                        type is Utilization, Value, or AverageValue
                                      type: string
                                    value:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: value is the target value of the
                                        metric (as a quantity).
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - type
                                  type: object
                              required:
                              - describedObject
                              - metric
                              - target
                              type: object
                            pods:
                              description: pods refers to a metric describing each
                                pod in the current scale target (for example, transactions-processed-per-second).  The
                                values will be averaged together before being compared
                                to the target value.
                              properties:
                                metric:
                                  description: metric identifies the target metric
                                    by name and selector
                                  properties:
                                    name:
                                      description: name is the name of the given metric
                                      type: string
                                    selector:
                                      description: selector is the string-encoded
                                        form of a standard kubernetes label selector
                                        for the given metric When set, it is passed
                                        as an additional parameter to the metrics
                                        server for more specific metrics scoping.
                                        When unset, just the metricName will be used
                                        to gather metrics.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                target:
                                  description: target specifies the target value for
                                    the given metric
                                  properties:
                                    averageUtilization:
                                      description: averageUtilization is the target
                                        value of the average of the resource metric
                                        across all relevant pods, represented as a
                                        percentage of the requested value of the resource
                                        for the pods. Currently only valid for Resource
                                        metric source type
                                      format: int32
                                      type: integer
                                    averageValue:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: averageValue is the target value
                                        of the average of the metric across all relevant
                                        pods (as a quantity)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    type:
                                      description: type represents whether the metric
                                        type is Utilization, Value, or AverageValue
                                      type: string
                                    value:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: value is the target value of the
                                        metric (as a quantity).
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - type
                                  type: object
                              required:
                              - metric
                              - target
                              type: object
                            resource:
                              description: resource refers to a resource metric (such
                                as those specified in requests and limits) known to
                                Kubernetes describing each pod in the current scale
                                target (e.g. CPU or memory). Such metrics are built
                                in to Kubernetes, and have special scaling options
                                on top of those available to normal per-pod metrics
                                using the "pods" source.
                              properties:
                                name:
                                  description: name is the name of the resource in
                                    question.
                                  type: string
                                target:
                                  description: target specifies the target value for
                                    the given metric
                                  properties:
                                    averageUtilization:
                                      description: averageUtilization is the target
                                        value of the average of the resource metric
                                        across all relevant pods, represented as a
                                        percentage of the requested value of the resource
                                        for the pods. Currently only valid for Resource
                                        metric source type
                                      format: int32
                                      type: integer
                                    averageValue:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: averageValue is the target value
                                        of the average of the metric across all relevant
                                        pods (as a quantity)
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    type:
                                      description: type represents whether the metric
                                        type is Utilization, Value, or AverageValue
                                      type: string
                                    value:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: value is the target value of the
                                        metric (as a quantity).
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - type
                                  type: object
                              required:
                              - name
                              - target
                              type: object
                            type:
                              description: 'type is the type of metric source.  It
                                should be one of "ContainerResource", "External",
                                "Object", "Pods" or "Resource", each mapping to a
                                matching field in the object. Note: "ContainerResource"
                                type is available on when the feature-gate HPAContainerMetrics
                                is enabled'
                              type: string
                          required:
                          - type
                          type: object
                        type: array
                      minReplicas:
                        description: minReplicas is the lower limit for the number
                          of replicas to which the autoscaler can scale down.  It
                          defaults to 1 pod.  minReplicas is allowed to be 0 if the
                          alpha feature gate HPAScaleToZero is enabled and at least
                          one Object or External metric is configured.  Scaling is
                          active as long as at least one metric value is available.
                        format: int32
                        type: integer
                    required:
                    - maxReplicas
                    type: object
                  image:
                    default: quay.io/netobserv/flowlogs-pipeline:main
                    description: Image is the collector image (including domain and
                      tag)
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: ImagePullPolicy is the Kubernetes pull policy for
                      the image defined above
                    enum:
                    - IfNotPresent
                    - Always
                    - Never
                    type: string
                  kind:
                    default: DaemonSet
                    description: Kind is the workload kind, either DaemonSet or Deployment
                    enum:
                    - DaemonSet
                    - Deployment
                    type: string
                  logLevel:
                    default: info
                    description: LogLevel defines the log level for the collector
                      runtime
                    enum:
                    - trace
                    - debug
                    - info
                    - warn
                    - error
                    - fatal
                    - panic
                    type: string
                  port:
                    default: 2055
                    description: 'Port is the collector port: either a service port
                      for Deployment kind, or host port for DaemonSet kind By conventions,
                      some value are not authorized port must not be below 1024 and
                      must not equal this values: 4789,6081,500, and 4500'
                    format: int32
                    maximum: 65535
                    minimum: 1025
                    type: integer
                  prometheusPort:
                    default: 9090
                    description: 'PrometheusPort is the prometheus HTTP port: this
                      port exposes prometheus metrics'
                    format: int32
                    maximum: 65535
                    minimum: 1
                    type: integer
                  replicas:
                    default: 1
                    description: Replicas defines the number of replicas (pods) to
                      start for Deployment kind. Ignored for DaemonSet.
                    format: int32
                    minimum: 0
                    type: integer
                  resources:
                    default:
                      limits:
                        memory: 300Mi
                      requests:
                        cpu: 100m
                        memory: 100Mi
                    description: 'Compute Resources required by this container. Cannot
                      be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
              grafana:
                description: Grafana contains settings related to the grafana configuration.
                  It will create subscription to install Grafana Operator. This feature
                  is experimental, use it for development only
                properties:
                  dashboardSpec:
                    description: DashboardSpec is the Spec section of Dashboard object
                      will be ignored if instanceSpec is not set
                    properties:
                      configMapRef:
                        description: Selects a key from a ConfigMap.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                  instanceSpec:
                    description: InstanceSpec is the Spec section of Grafana instance
                    properties:
                      config:
                        description: GrafanaConfig is the configuration for grafana
                        properties:
                          alerting:
                            properties:
                              concurrent_render_limit:
                                nullable: true
                                type: integer
                              enabled:
                                nullable: true
                                type: boolean
                              error_or_timeout:
                                type: string
                              evaluation_timeout_seconds:
                                nullable: true
                                type: integer
                              execute_alerts:
                                nullable: true
                                type: boolean
                              max_attempts:
                                nullable: true
                                type: integer
                              nodata_or_nullvalues:
                                type: string
                              notification_timeout_seconds:
                                nullable: true
                                type: integer
                            type: object
                          analytics:
                            properties:
                              check_for_updates:
                                nullable: true
                                type: boolean
                              google_analytics_ua_id:
                                type: string
                              reporting_enabled:
                                nullable: true
                                type: boolean
                            type: object
                          auth:
                            properties:
                              disable_login_form:
                                nullable: true
                                type: boolean
                              disable_signout_menu:
                                nullable: true
                                type: boolean
                              login_cookie_name:
                                type: string
                              login_maximum_inactive_lifetime_days:
                                nullable: true
                                type: integer
                              login_maximum_inactive_lifetime_duration:
                                type: string
                              login_maximum_lifetime_days:
                                nullable: true
                                type: integer
                              login_maximum_lifetime_duration:
                                type: string
                              oauth_auto_login:
                                nullable: true
                                type: boolean
                              signout_redirect_url:
                                type: string
                              sigv4_auth_enabled:
                                nullable: true
                                type: boolean
                              token_rotation_interval_minutes:
                                nullable: true
                                type: integer
                            type: object
                          auth.anonymous:
                            properties:
                              enabled:
                                nullable: true
                                type: boolean
                              org_name:
                                type: string
                              org_role:
                                type: string
                            type: object
                          auth.azuread:
                            properties:
                              allow_sign_up:
                                nullable: true
                                type: boolean
                              allowed_domains:
                                type: string
                              allowed_groups:
                                type: string
                              auth_url:
                                type: string
                              client_id:
                                type: string
                              client_secret:
                                type: string
                              enabled:
                                nullable: true
                                type: boolean
                              scopes:
                                type: string
                              token_url:
                                type: string
                            type: object
                          auth.basic:
                            properties:
                              enabled:
                                nullable: true
                                type: boolean
                            type: object
                          auth.generic_oauth:
                            properties:
                              allow_sign_up:
                                nullable: true
                                type: boolean
                              allowed_domains:
                                type: string
                              api_url:
                                type: string
                              auth_url:
                                type: string
                              client_id:
                                type: string
                              client_secret:
                                type: string
                              email_attribute_path:
                                type: string
                              enabled:
                                nullable: true
                                type: boolean
                              role_attribute_path:
                                type: string
                              role_attribute_strict:
                                nullable: true
                                type: boolean
                              scopes:
                                type: string
                              tls_client_ca:
                                type: string
                              tls_client_cert:
                                type: string
                              tls_client_key:
                                type: string
                              tls_skip_verify_insecure:
                                nullable: true
                                type: boolean
                              token_url:
                                type: string
                            type: object
                          auth.github:
                            properties:
                              allow_sign_up:
                                nullable: true
                                type: boolean
                              allowed_organizations:
                                type: string
                              api_url:
                                type: string
                              auth_url:
                                type: string
                              client_id:
                                type: string
                              client_secret:
                                type: string
                              enabled:
                                nullable: true
                                type: boolean
                              scopes:
                                type: string
                              team_ids:
                                type: string
                              token_url:
                                type: string
                            type: object
                          auth.gitlab:
                            properties:
                              allow_sign_up:
                                nullable: true
                                type: boolean
                              allowed_groups:
                                type: string
                              api_url:
                                type: string
                              auth_url:
                                type: string
                              client_id:
                                type: string
                              client_secret:
                                type: string
                              enabled:
                                nullable: true
                                type: boolean
                              scopes:
                                type: string
                              token_url:
                                type: string
                            type: object
                          auth.google:
                            properties:
                              allow_sign_up:
                                type: boolean
                              allowed_domains:
                                type: string
                              auth_url:
                                type: string
                              client_id:
                                type: string
                              client_secret:
                                type: string
                              enabled:
                                nullable: true
                                type: boolean
                              scopes:
                                type: string
                              token_url:
                                type: string
                            type: object
                          auth.ldap:
                            properties:
                              allow_sign_up:
                                nullable: true
                                type: boolean
                              config_file:
                                type: string
                              enabled:
                                nullable: true
                                type: boolean
                            type: object
                          auth.okta:
                            properties:
                              allow_sign_up:
                                nullable: true
                                type: boolean
                              allowed_domains:
                                type: string
                              allowed_groups:
                                type: string
                              api_url:
                                type: string
                              auth_url:
                                type: string
                              client_id:
                                type: string
                              client_secret:
                                type: string
                              enabled:
                                nullable: true
                                type: boolean
                              name:
                                type: string
                              role_attribute_path:
                                type: string
                              role_attribute_strict:
                                nullable: true
                                type: boolean
                              scopes:
                                type: string
                              token_url:
                                type: string
                            type: object
                          auth.proxy:
                            properties:
                              auto_sign_up:
                                nullable: true
                                type: boolean
                              enable_login_token:
                                nullable: true
                                type: boolean
                              enabled:
                                nullable: true
                                type: boolean
                              header_name:
                                type: string
                              header_property:
                                type: string
                              headers:
                                type: string
                              ldap_sync_ttl:
                                type: string
                              whitelist:
                                type: string
                            type: object
                          auth.saml:
                            properties:
                              allow_idp_initiated:
                                nullable: true
                                type: boolean
                              allowed_organizations:
                                type: string
                              assertion_attribute_email:
                                type: string
                              assertion_attribute_groups:
                                type: string
                              assertion_attribute_login:
                                type: string
                              assertion_attribute_name:
                                type: string
                              assertion_attribute_org:
                                type: string
                              assertion_attribute_role:
                                type: string
                              certificate_path:
                                type: string
                              enabled:
                                nullable: true
                                type: boolean
                              idp_metadata_url:
                                type: string
                              max_issue_delay:
                                type: string
                              metadata_valid_duration:
                                type: string
                              org_mapping:
                                type: string
                              private_key_path:
                                type: string
                              relay_state:
                                type: string
                              role_values_admin:
                                type: string
                              role_values_editor:
                                type: string
                              role_values_grafana_admin:
                                type: string
                              signature_algorithm:
                                type: string
                              single_logout:
                                nullable: true
                                type: boolean
                            type: object
                          dashboards:
                            properties:
                              default_home_dashboard_path:
                                type: string
                              versions_to_keep:
                                nullable: true
                                type: integer
                            type: object
                          database:
                            properties:
                              ca_cert_path:
                                type: string
                              cache_mode:
                                type: string
                              client_cert_path:
                                type: string
                              client_key_path:
                                type: string
                              conn_max_lifetime:
                                nullable: true
                                type: integer
                              host:
                                type: string
                              log_queries:
                                nullable: true
                                type: boolean
                              max_idle_conn:
                                nullable: true
                                type: integer
                              max_open_conn:
                                nullable: true
                                type: integer
                              name:
                                type: string
                              password:
                                type: string
                              path:
                                type: string
                              server_cert_name:
                                type: string
                              ssl_mode:
                                type: string
                              type:
                                type: string
                              url:
                                type: string
                              user:
                                type: string
                            type: object
                          dataproxy:
                            properties:
                              logging:
                                nullable: true
                                type: boolean
                              send_user_header:
                                nullable: true
                                type: boolean
                              timeout:
                                nullable: true
                                type: integer
                            type: object
                          external_image_storage:
                            properties:
                              provider:
                                type: string
                            type: object
                          external_image_storage.azure_blob:
                            properties:
                              account_key:
                                type: string
                              account_name:
                                type: string
                              container_name:
                                type: string
                            type: object
                          external_image_storage.gcs:
                            properties:
                              bucket:
                                type: string
                              key_file:
                                type: string
                              path:
                                type: string
                            type: object
                          external_image_storage.s3:
                            properties:
                              access_key:
                                type: string
                              bucket:
                                type: string
                              bucket_url:
                                type: string
                              path:
                                type: string
                              region:
                                type: string
                              secret_key:
                                type: string
                            type: object
                          external_image_storage.webdav:
                            properties:
                              password:
                                type: string
                              public_url:
                                type: string
                              url:
                                type: string
                              username:
                                type: string
                            type: object
                          feature_toggles:
                            properties:
                              enable:
                                type: string
                            type: object
                          live:
                            properties:
                              allowed_origins:
                                type: string
                              max_connections:
                                nullable: true
                                type: integer
                            type: object
                          log:
                            properties:
                              filters:
                                type: string
                              level:
                                type: string
                              mode:
                                type: string
                            type: object
                          log.console:
                            properties:
                              format:
                                type: string
                              level:
                                type: string
                            type: object
                          log.frontend:
                            properties:
                              custom_endpoint:
                                type: string
                              enabled:
                                nullable: true
                                type: boolean
                              log_endpoint_burst_limit:
                                nullable: true
                                type: integer
                              log_endpoint_requests_per_second_limit:
                                nullable: true
                                type: integer
                              sample_rate:
                                type: string
                              sentry_dsn:
                                type: string
                            type: object
                          metrics:
                            properties:
                              basic_auth_password:
                                type: string
                              basic_auth_username:
                                type: string
                              enabled:
                                nullable: true
                                type: boolean
                              interval_seconds:
                                nullable: true
                                type: integer
                            type: object
                          metrics.graphite:
                            properties:
                              address:
                                type: string
                              prefix:
                                type: string
                            type: object
                          panels:
                            properties:
                              disable_sanitize_html:
                                nullable: true
                                type: boolean
                            type: object
                          paths:
                            properties:
                              temp_data_lifetime:
                                type: string
                            type: object
                          plugins:
                            properties:
                              enable_alpha:
                                nullable: true
                                type: boolean
                            type: object
                          remote_cache:
                            properties:
                              connstr:
                                type: string
                              type:
                                type: string
                            type: object
                          rendering:
                            properties:
                              callback_url:
                                type: string
                              concurrent_render_request_limit:
                                nullable: true
                                type: integer
                              server_url:
                                type: string
                            type: object
                          security:
                            properties:
                              admin_password:
                                type: string
                              admin_user:
                                type: string
                              allow_embedding:
                                nullable: true
                                type: boolean
                              cookie_samesite:
                                type: string
                              cookie_secure:
                                nullable: true
                                type: boolean
                              data_source_proxy_whitelist:
                                type: string
                              disable_gravatar:
                                nullable: true
                                type: boolean
                              login_remember_days:
                                nullable: true
                                type: integer
                              secret_key:
                                type: string
                              strict_transport_security:
                                nullable: true
                                type: boolean
                              strict_transport_security_max_age_seconds:
                                nullable: true
                                type: integer
                              strict_transport_security_preload:
                                nullable: true
                                type: boolean
                              strict_transport_security_subdomains:
                                nullable: true
                                type: boolean
                              x_content_type_options:
                                nullable: true
                                type: boolean
                              x_xss_protection:
                                nullable: true
                                type: boolean
                            type: object
                          server:
                            properties:
                              cert_file:
                                type: string
                              cert_key:
                                type: string
                              domain:
                                type: string
                              enable_gzip:
                                nullable: true
                                type: boolean
                              enforce_domain:
                                nullable: true
                                type: boolean
                              http_addr:
                                type: string
                              http_port:
                                type: string
                              protocol:
                                type: string
                              root_url:
                                type: string
                              router_logging:
                                nullable: true
                                type: boolean
                              serve_from_sub_path:
                                nullable: true
                                type: boolean
                              socket:
                                type: string
                              static_root_path:
                                type: string
                            type: object
                          smtp:
                            properties:
                              cert_file:
                                type: string
                              ehlo_identity:
                                type: string
                              enabled:
                                nullable: true
                                type: boolean
                              from_address:
                                type: string
                              from_name:
                                type: string
                              host:
                                type: string
                              key_file:
                                type: string
                              password:
                                type: string
                              skip_verify:
                                nullable: true
                                type: boolean
                              user:
                                type: string
                            type: object
                          snapshots:
                            properties:
                              external_enabled:
                                nullable: true
                                type: boolean
                              external_snapshot_name:
                                type: string
                              external_snapshot_url:
                                type: string
                              snapshot_remove_expired:
                                nullable: true
                                type: boolean
                            type: object
                          unified_alerting:
                            properties:
                              enabled:
                                nullable: true
                                type: boolean
                              evaluation_timeout:
                                type: string
                              execute_alerts:
                                type: boolean
                              max_attempts:
                                type: integer
                              min_interval:
                                type: string
                            type: object
                          users:
                            properties:
                              allow_org_create:
                                nullable: true
                                type: boolean
                              allow_sign_up:
                                nullable: true
                                type: boolean
                              auto_assign_org:
                                nullable: true
                                type: boolean
                              auto_assign_org_id:
                                type: string
                              auto_assign_org_role:
                                type: string
                              default_theme:
                                type: string
                              editors_can_admin:
                                nullable: true
                                type: boolean
                              login_hint:
                                type: string
                              password_hint:
                                type: string
                              viewers_can_edit:
                                nullable: true
                                type: boolean
                            type: object
                        type: object
                      enable:
                        default: false
                        description: Should this feature be enabled
                        type: boolean
                      ingress:
                        default: false
                        description: Ingress is a flag to create grafana route
                        type: boolean
                    required:
                    - config
                    type: object
                type: object
              ipfix:
                default:
                  sampling: 400
                description: IPFIX contains the settings of an IPFIX-based flow reporter
                  when the "agent" property is set to "ipfix". defined if the ebpf
                  section is already defined
                properties:
                  cacheActiveTimeout:
                    default: 60s
                    description: CacheActiveTimeout is the max period during which
                      the reporter will aggregate flows before sending
                    pattern: ^\d+(ns|ms|s|m)?$
                    type: string
                  cacheMaxFlows:
                    default: 100
                    description: CacheMaxFlows is the max number of flows in an aggregate;
                      when reached, the reporter sends the flows
                    format: int32
                    minimum: 0
                    type: integer
                  sampling:
                    default: 400
                    description: Sampling is the sampling rate on the reporter. 100
                      means one flow on 100 is sent. 0 means disabled.
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              kafka:
                description: Kafka contains settings related to the kafka configuration.
                  It will create subscription to install Strimzi Operator. This feature
                  is experimental, use it for development only
                properties:
                  instanceSpec:
                    description: InstanceSpec is the Spec section of Kafka instance
                    properties:
                      enable:
                        default: false
                        description: Should this feature be enabled
                        type: boolean
                      kafka:
                        description: Configuration of the Kafka cluster.
                        properties:
                          config:
                            description: Kafka broker config properties
                            x-kubernetes-preserve-unknown-fields: true
                          listeners:
                            description: Configures listeners of Kafka brokers.
                            items:
                              properties:
                                authentication:
                                  description: Authentication configuration for this
                                    listener.
                                  properties:
                                    accessTokenIsJwt:
                                      description: Configure whether the access token
                                        is treated as JWT. This must be set to `false`
                                        if the authorization server returns opaque
                                        tokens. Defaults to `true`.
                                      type: boolean
                                    checkAccessTokenType:
                                      description: Configure whether the access token
                                        type check is performed or not. This should
                                        be set to `false` if the authorization server
                                        does not include 'typ' claim in JWT token.
                                        Defaults to `true`.
                                      type: boolean
                                    checkAudience:
                                      description: Enable or disable audience checking.
                                        Audience checks identify the recipients of
                                        tokens. If audience checking is enabled, the
                                        OAuth Client ID also has to be configured
                                        using the `clientId` property. The Kafka broker
                                        will reject tokens that do not have its `clientId`
                                        in their `aud` (audience) claim.Default value
                                        is `false`.
                                      type: boolean
                                    checkIssuer:
                                      description: Enable or disable issuer checking.
                                        By default issuer is checked using the value
                                        configured by `validIssuerUri`. Default value
                                        is `true`.
                                      type: boolean
                                    clientAudience:
                                      description: The audience to use when making
                                        requests to the authorization server's token
                                        endpoint. Used for inter-broker authentication
                                        and for configuring OAuth 2.0 over PLAIN using
                                        the `clientId` and `secret` method.
                                      type: string
                                    clientId:
                                      description: OAuth Client ID which the Kafka
                                        broker can use to authenticate against the
                                        authorization server and use the introspect
                                        endpoint URI.
                                      type: string
                                    clientScope:
                                      description: The scope to use when making requests
                                        to the authorization server's token endpoint.
                                        Used for inter-broker authentication and for
                                        configuring OAuth 2.0 over PLAIN using the
                                        `clientId` and `secret` method.
                                      type: string
                                    clientSecret:
                                      description: Link to Kubernetes Secret containing
                                        the OAuth client secret which the Kafka broker
                                        can use to authenticate against the authorization
                                        server and use the introspect endpoint URI.
                                      properties:
                                        key:
                                          description: The key under which the secret
                                            value is stored in the Kubernetes Secret.
                                          type: string
                                        secretName:
                                          description: The name of the Kubernetes
                                            Secret containing the secret value.
                                          type: string
                                      required:
                                      - key
                                      - secretName
                                      type: object
                                    customClaimCheck:
                                      description: JsonPath filter query to be applied
                                        to the JWT token or to the response of the
                                        introspection endpoint for additional token
                                        validation. Not set by default.
                                      type: string
                                    disableTlsHostnameVerification:
                                      description: Enable or disable TLS hostname
                                        verification. Default value is `false`.
                                      type: boolean
                                    enableECDSA:
                                      description: Enable or disable ECDSA support
                                        by installing BouncyCastle crypto provider.
                                        ECDSA support is always enabled. The BouncyCastle
                                        libraries are no longer packaged with Strimzi.
                                        Value is ignored.
                                      type: boolean
                                    enableOauthBearer:
                                      description: Enable or disable OAuth authentication
                                        over SASL_OAUTHBEARER. Default value is `true`.
                                      type: boolean
                                    enablePlain:
                                      description: Enable or disable OAuth authentication
                                        over SASL_PLAIN. There is no re-authentication
                                        support when this mechanism is used. Default
                                        value is `false`.
                                      type: boolean
                                    fallbackUserNameClaim:
                                      description: The fallback username claim to
                                        be used for the user id if the claim specified
                                        by `userNameClaim` is not present. This is
                                        useful when `client_credentials` authentication
                                        only results in the client id being provided
                                        in another claim. It only takes effect if
                                        `userNameClaim` is set.
                                      type: string
                                    fallbackUserNamePrefix:
                                      description: The prefix to use with the value
                                        of `fallbackUserNameClaim` to construct the
                                        user id. This only takes effect if `fallbackUserNameClaim`
                                        is true, and the value is present for the
                                        claim. Mapping usernames and client ids into
                                        the same user id space is useful in preventing
                                        name collisions.
                                      type: string
                                    introspectionEndpointUri:
                                      description: URI of the token introspection
                                        endpoint which can be used to validate opaque
                                        non-JWT tokens.
                                      type: string
                                    jwksEndpointUri:
                                      description: URI of the JWKS certificate endpoint,
                                        which can be used for local JWT validation.
                                      type: string
                                    jwksExpirySeconds:
                                      description: Configures how often are the JWKS
                                        certificates considered valid. The expiry
                                        interval has to be at least 60 seconds longer
                                        then the refresh interval specified in `jwksRefreshSeconds`.
                                        Defaults to 360 seconds.
                                      format: int32
                                      type: integer
                                    jwksMinRefreshPauseSeconds:
                                      description: The minimum pause between two consecutive
                                        refreshes. When an unknown signing key is
                                        encountered the refresh is scheduled immediately,
                                        but will always wait for this minimum pause.
                                        Defaults to 1 second.
                                      format: int32
                                      type: integer
                                    jwksRefreshSeconds:
                                      description: Configures how often are the JWKS
                                        certificates refreshed. The refresh interval
                                        has to be at least 60 seconds shorter then
                                        the expiry interval specified in `jwksExpirySeconds`.
                                        Defaults to 300 seconds.
                                      format: int32
                                      type: integer
                                    maxSecondsWithoutReauthentication:
                                      description: Maximum number of seconds the authenticated
                                        session remains valid without re-authentication.
                                        This enables Apache Kafka re-authentication
                                        feature, and causes sessions to expire when
                                        the access token expires. If the access token
                                        expires before max time or if max time is
                                        reached, the client has to re-authenticate,
                                        otherwise the server will drop the connection.
                                        Not set by default - the authenticated session
                                        does not expire when the access token expires.
                                        This option only applies to SASL_OAUTHBEARER
                                        authentication mechanism (when `enableOauthBearer`
                                        is `true`).
                                      format: int32
                                      type: integer
                                    tlsTrustedCertificates:
                                      description: Trusted certificates for TLS connection
                                        to the OAuth server.
                                      items:
                                        properties:
                                          certificate:
                                            description: The name of the file certificate
                                              in the Secret.
                                            type: string
                                          secretName:
                                            description: The name of the Secret containing
                                              the certificate.
                                            type: string
                                        required:
                                        - certificate
                                        - secretName
                                        type: object
                                      type: array
                                    tokenEndpointUri:
                                      description: URI of the Token Endpoint to use
                                        with SASL_PLAIN mechanism when the client
                                        authenticates with `clientId` and a `secret`.
                                        If set, the client can authenticate over SASL_PLAIN
                                        by either setting `username` to `clientId`,
                                        and setting `password` to client `secret`,
                                        or by setting `username` to account username,
                                        and `password` to access token prefixed with
                                        `$accessToken:`. If this option is not set,
                                        the `password` is always interpreted as an
                                        access token (without a prefix), and `username`
                                        as the account username (a so called 'no-client-credentials'
                                        mode).
                                      type: string
                                    type:
                                      description: Authentication type. `oauth` type
                                        uses SASL OAUTHBEARER Authentication. `scram-sha-512`
                                        type uses SASL SCRAM-SHA-512 Authentication.
                                        `tls` type uses TLS Client Authentication.
                                        `tls` type is supported only on TLS listeners.
                                      type: string
                                    userInfoEndpointUri:
                                      description: URI of the User Info Endpoint to
                                        use as a fallback to obtaining the user id
                                        when the Introspection Endpoint does not return
                                        information that can be used for the user
                                        id.
                                      type: string
                                    userNameClaim:
                                      description: Name of the claim from the JWT
                                        authentication token, Introspection Endpoint
                                        response or User Info Endpoint response which
                                        will be used to extract the user id. Defaults
                                        to `sub`.
                                      type: string
                                    validIssuerUri:
                                      description: URI of the token issuer used for
                                        authentication.
                                      type: string
                                    validTokenType:
                                      description: Valid value for the `token_type`
                                        attribute returned by the Introspection Endpoint.
                                        No default value, and not checked by default.
                                      type: string
                                  required:
                                  - type
                                  type: object
                                configuration:
                                  description: Additional listener configuration.
                                  properties:
                                    bootstrap:
                                      description: Bootstrap configuration.
                                      properties:
                                        alternativeNames:
                                          description: Additional alternative names
                                            for the bootstrap service. The alternative
                                            names will be added to the list of subject
                                            alternative names of the TLS certificates.
                                          items:
                                            type: string
                                          type: array
                                        annotations:
                                          description: Annotations that will be added
                                            to the `Ingress`, `Route`, or `Service`
                                            resource. You can use this field to configure
                                            DNS providers such as External DNS. This
                                            field can be used only with `loadbalancer`,
                                            `nodeport`, `route`, or `ingress` type
                                            listeners.
                                          x-kubernetes-preserve-unknown-fields: true
                                        host:
                                          description: The bootstrap host. This field
                                            will be used in the Ingress resource or
                                            in the Route resource to specify the desired
                                            hostname. This field can be used only
                                            with `route` (optional) or `ingress` (required)
                                            type listeners.
                                          type: string
                                        labels:
                                          description: Labels that will be added to
                                            the `Ingress`, `Route`, or `Service` resource.
                                            This field can be used only with `loadbalancer`,
                                            `nodeport`, `route`, or `ingress` type
                                            listeners.
                                          x-kubernetes-preserve-unknown-fields: true
                                        loadBalancerIP:
                                          description: The loadbalancer is requested
                                            with the IP address specified in this
                                            field. This feature depends on whether
                                            the underlying cloud provider supports
                                            specifying the `loadBalancerIP` when a
                                            load balancer is created. This field is
                                            ignored if the cloud provider does not
                                            support the feature.This field can be
                                            used only with `loadbalancer` type listener.
                                          type: string
                                        nodePort:
                                          description: Node port for the bootstrap
                                            service. This field can be used only with
                                            `nodeport` type listener.
                                          format: int32
                                          type: integer
                                      type: object
                                    brokerCertChainAndKey:
                                      description: Reference to the `Secret` which
                                        holds the certificate and private key pair
                                        which will be used for this listener. The
                                        certificate can optionally contain the whole
                                        chain. This field can be used only with listeners
                                        with enabled TLS encryption.
                                      properties:
                                        certificate:
                                          description: The name of the file certificate
                                            in the Secret.
                                          type: string
                                        key:
                                          description: The name of the private key
                                            in the Secret.
                                          type: string
                                        secretName:
                                          description: The name of the Secret containing
                                            the certificate.
                                          type: string
                                      required:
                                      - certificate
                                      - key
                                      - secretName
                                      type: object
                                    brokers:
                                      description: Per-broker configurations.
                                      items:
                                        properties:
                                          advertisedHost:
                                            description: The host name which will
                                              be used in the brokers' `advertised.brokers`.
                                            type: string
                                          advertisedPort:
                                            description: The port number which will
                                              be used in the brokers' `advertised.brokers`.
                                            format: int32
                                            type: integer
                                          annotations:
                                            description: Annotations that will be
                                              added to the `Ingress` or `Service`
                                              resource. You can use this field to
                                              configure DNS providers such as External
                                              DNS. This field can be used only with
                                              `loadbalancer`, `nodeport`, or `ingress`
                                              type listeners.
                                            x-kubernetes-preserve-unknown-fields: true
                                          broker:
                                            description: ID of the kafka broker (broker
                                              identifier). Broker IDs start from 0
                                              and correspond to the number of broker
                                              replicas.
                                            format: int32
                                            type: integer
                                          host:
                                            description: The broker host. This field
                                              will be used in the Ingress resource
                                              or in the Route resource to specify
                                              the desired hostname. This field can
                                              be used only with `route` (optional)
                                              or `ingress` (required) type listeners.
                                            type: string
                                          labels:
                                            description: Labels that will be added
                                              to the `Ingress`, `Route`, or `Service`
                                              resource. This field can be used only
                                              with `loadbalancer`, `nodeport`, `route`,
                                              or `ingress` type listeners.
                                            x-kubernetes-preserve-unknown-fields: true
                                          loadBalancerIP:
                                            description: The loadbalancer is requested
                                              with the IP address specified in this
                                              field. This feature depends on whether
                                              the underlying cloud provider supports
                                              specifying the `loadBalancerIP` when
                                              a load balancer is created. This field
                                              is ignored if the cloud provider does
                                              not support the feature.This field can
                                              be used only with `loadbalancer` type
                                              listener.
                                            type: string
                                          nodePort:
                                            description: Node port for the per-broker
                                              service. This field can be used only
                                              with `nodeport` type listener.
                                            format: int32
                                            type: integer
                                        required:
                                        - broker
                                        type: object
                                      type: array
                                    class:
                                      description: Configures the `Ingress` class
                                        that defines which `Ingress` controller will
                                        be used. This field can be used only with
                                        `ingress` type listener. If not specified,
                                        the default Ingress controller will be used.
                                      type: string
                                    externalTrafficPolicy:
                                      description: Specifies whether the service routes
                                        external traffic to node-local or cluster-wide
                                        endpoints. `Cluster` may cause a second hop
                                        to another node and obscures the client source
                                        IP. `Local` avoids a second hop for LoadBalancer
                                        and Nodeport type services and preserves the
                                        client source IP (when supported by the infrastructure).
                                        If unspecified, Kubernetes will use `Cluster`
                                        as the default.This field can be used only
                                        with `loadbalancer` or `nodeport` type listener.
                                      type: string
                                    finalizers:
                                      description: A list of finalizers which will
                                        be configured for the `LoadBalancer` type
                                        Services created for this listener. If supported
                                        by the platform, the finalizer `service.kubernetes.io/load-balancer-cleanup`
                                        to make sure that the external load balancer
                                        is deleted together with the service.For more
                                        information, see https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#garbage-collecting-load-balancers.
                                        This field can be used only with `loadbalancer`
                                        type listeners.
                                      items:
                                        type: string
                                      type: array
                                    ipFamilies:
                                      description: Specifies the IP Families used
                                        by the service. Available options are `IPv4`
                                        and `IPv6. If unspecified, Kubernetes will
                                        choose the default value based on the `ipFamilyPolicy`
                                        setting. Available on Kubernetes 1.20 and
                                        newer.
                                      items:
                                        type: string
                                      type: array
                                    ipFamilyPolicy:
                                      description: Specifies the IP Family Policy
                                        used by the service. Available options are
                                        `SingleStack`, `PreferDualStack` and `RequireDualStack`.
                                        `SingleStack` is for a single IP family. `PreferDualStack`
                                        is for two IP families on dual-stack configured
                                        clusters or a single IP family on single-stack
                                        clusters. `RequireDualStack` fails unless
                                        there are two IP families on dual-stack configured
                                        clusters. If unspecified, Kubernetes will
                                        choose the default value based on the service
                                        type. Available on Kubernetes 1.20 and newer.
                                      type: string
                                    loadBalancerSourceRanges:
                                      description: A list of CIDR ranges (for example
                                        `10.0.0.0/8` or `130.211.204.1/32`) from which
                                        clients can connect to load balancer type
                                        listeners. If supported by the platform, traffic
                                        through the loadbalancer is restricted to
                                        the specified CIDR ranges. This field is applicable
                                        only for loadbalancer type services and is
                                        ignored if the cloud provider does not support
                                        the feature. For more information, see https://v1-17.docs.kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/.
                                        This field can be used only with `loadbalancer`
                                        type listener.
                                      items:
                                        type: string
                                      type: array
                                    maxConnectionCreationRate:
                                      description: The maximum connection creation
                                        rate we allow in this listener at any time.
                                        New connections will be throttled if the limit
                                        is reached.
                                      format: int32
                                      type: integer
                                    maxConnections:
                                      description: The maximum number of connections
                                        we allow for this listener in the broker at
                                        any time. New connections are blocked if the
                                        limit is reached.
                                      format: int32
                                      type: integer
                                    preferredNodePortAddressType:
                                      description: "Defines which address type should
                                        be used as the node address. Available types
                                        are: `ExternalDNS`, `ExternalIP`, `InternalDNS`,
                                        `InternalIP` and `Hostname`. By default, the
                                        addresses will be used in the following order
                                        (the first one found will be used): \n * `ExternalDNS`
                                        * `ExternalIP` * `InternalDNS` * `InternalIP`
                                        * `Hostname` \n This field is used to select
                                        the preferred address type, which is checked
                                        first. If no address is found for this address
                                        type, the other types are checked in the default
                                        order. This field can only be used with `nodeport`
                                        type listener."
                                      type: string
                                    useServiceDnsDomain:
                                      description: Configures whether the Kubernetes
                                        service DNS domain should be used or not.
                                        If set to `true`, the generated addresses
                                        will contain the service DNS domain suffix
                                        (by default `.cluster.local`, can be configured
                                        using environment variable `KUBERNETES_SERVICE_DNS_DOMAIN`).
                                        Defaults to `false`.This field can be used
                                        only with `internal` type listener.
                                      type: boolean
                                  type: object
                                name:
                                  description: Name of the listener. The name will
                                    be used to identify the listener and the related
                                    Kubernetes objects. The name has to be unique
                                    within given a Kafka cluster. The name can consist
                                    of lowercase characters and numbers and be up
                                    to 11 characters long.
                                  type: string
                                networkPolicyPeers:
                                  description: List of peers which should be able
                                    to connect to this listener. Peers in this list
                                    are combined using a logical OR operation. If
                                    this field is empty or missing, all connections
                                    will be allowed for this listener. If this field
                                    is present and contains at least one item, the
                                    listener only allows the traffic which matches
                                    at least one item in this list.
                                  items:
                                    properties:
                                      ipBlock:
                                        description: IpBlock corresponds to the JSON
                                          schema field "ipBlock".
                                        properties:
                                          cidr:
                                            description: Cidr corresponds to the JSON
                                              schema field "cidr".
                                            type: string
                                          except:
                                            description: Except corresponds to the
                                              JSON schema field "except".
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      namespaceSelector:
                                        description: NamespaceSelector corresponds
                                          to the JSON schema field "namespaceSelector".
                                        properties:
                                          matchExpressions:
                                            description: MatchExpressions corresponds
                                              to the JSON schema field "matchExpressions".
                                            items:
                                              properties:
                                                key:
                                                  description: Key corresponds to
                                                    the JSON schema field "key".
                                                  type: string
                                                operator:
                                                  description: Operator corresponds
                                                    to the JSON schema field "operator".
                                                  type: string
                                                values:
                                                  description: Values corresponds
                                                    to the JSON schema field "values".
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            description: MatchLabels corresponds to
                                              the JSON schema field "matchLabels".
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      podSelector:
                                        description: PodSelector corresponds to the
                                          JSON schema field "podSelector".
                                        properties:
                                          matchExpressions:
                                            description: MatchExpressions corresponds
                                              to the JSON schema field "matchExpressions".
                                            items:
                                              properties:
                                                key:
                                                  description: Key corresponds to
                                                    the JSON schema field "key".
                                                  type: string
                                                operator:
                                                  description: Operator corresponds
                                                    to the JSON schema field "operator".
                                                  type: string
                                                values:
                                                  description: Values corresponds
                                                    to the JSON schema field "values".
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            description: MatchLabels corresponds to
                                              the JSON schema field "matchLabels".
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                port:
                                  description: Port number used by the listener inside
                                    Kafka. The port number has to be unique within
                                    a given Kafka cluster. Allowed port numbers are
                                    9092 and higher with the exception of ports 9404
                                    and 9999, which are already used for Prometheus
                                    and JMX. Depending on the listener type, the port
                                    number might not be the same as the port number
                                    that connects Kafka clients.
                                  format: int32
                                  type: integer
                                tls:
                                  description: Enables TLS encryption on the listener.
                                    This is a required property.
                                  type: boolean
                                type:
                                  description: "Type of the listener. Currently the
                                    supported types are `internal`, `route`, `loadbalancer`,
                                    `nodeport` and `ingress`. \n * `internal` type
                                    exposes Kafka internally only within the Kubernetes
                                    cluster. * `route` type uses OpenShift Routes
                                    to expose Kafka. * `loadbalancer` type uses LoadBalancer
                                    type services to expose Kafka. * `nodeport` type
                                    uses NodePort type services to expose Kafka. *
                                    `ingress` type uses Kubernetes Nginx Ingress to
                                    expose Kafka."
                                  type: string
                              required:
                              - name
                              - port
                              - tls
                              - type
                              type: object
                            type: array
                          replicas:
                            description: The number of pods in the cluster.
                            format: int32
                            type: integer
                          storage:
                            description: Storage configuration (disk). Cannot be updated.
                            properties:
                              class:
                                description: The storage class to use for dynamic
                                  volume allocation.
                                type: string
                              deleteClaim:
                                description: Specifies if the persistent volume claim
                                  has to be deleted when the cluster is un-deployed.
                                type: boolean
                              id:
                                description: Storage identification number. It is
                                  mandatory only for storage volumes defined in a
                                  storage of type 'jbod'.
                                format: int32
                                type: integer
                              overrides:
                                description: Overrides for individual brokers. The
                                  `overrides` field allows to specify a different
                                  configuration for different brokers.
                                items:
                                  properties:
                                    broker:
                                      description: Id of the kafka broker (broker
                                        identifier).
                                      format: int32
                                      type: integer
                                    class:
                                      description: The storage class to use for dynamic
                                        volume allocation for this broker.
                                      type: string
                                  type: object
                                type: array
                              selector:
                                description: Specifies a specific persistent volume
                                  to use. It contains key:value pairs representing
                                  labels for selecting such a volume.
                                x-kubernetes-preserve-unknown-fields: true
                              size:
                                description: When type=persistent-claim, defines the
                                  size of the persistent volume claim (i.e 1Gi). Mandatory
                                  when type=persistent-claim.
                                type: string
                              sizeLimit:
                                description: When type=ephemeral, defines the total
                                  amount of local storage required for this EmptyDir
                                  volume (for example 1Gi).
                                type: string
                              type:
                                description: Storage type, must be either 'ephemeral',
                                  'persistent-claim', or 'jbod'.
                                type: string
                              volumes:
                                description: List of volumes as Storage objects representing
                                  the JBOD disks array.
                                items:
                                  properties:
                                    class:
                                      description: The storage class to use for dynamic
                                        volume allocation.
                                      type: string
                                    deleteClaim:
                                      description: Specifies if the persistent volume
                                        claim has to be deleted when the cluster is
                                        un-deployed.
                                      type: boolean
                                    id:
                                      description: Storage identification number.
                                        It is mandatory only for storage volumes defined
                                        in a storage of type 'jbod'.
                                      format: int32
                                      type: integer
                                    overrides:
                                      description: Overrides for individual brokers.
                                        The `overrides` field allows to specify a
                                        different configuration for different brokers.
                                      items:
                                        properties:
                                          broker:
                                            description: Id of the kafka broker (broker
                                              identifier).
                                            format: int32
                                            type: integer
                                          class:
                                            description: The storage class to use
                                              for dynamic volume allocation for this
                                              broker.
                                            type: string
                                        type: object
                                      type: array
                                    selector:
                                      description: Specifies a specific persistent
                                        volume to use. It contains key:value pairs
                                        representing labels for selecting such a volume.
                                      x-kubernetes-preserve-unknown-fields: true
                                    size:
                                      description: When type=persistent-claim, defines
                                        the size of the persistent volume claim (i.e
                                        1Gi). Mandatory when type=persistent-claim.
                                      type: string
                                    sizeLimit:
                                      description: When type=ephemeral, defines the
                                        total amount of local storage required for
                                        this EmptyDir volume (for example 1Gi).
                                      type: string
                                    type:
                                      description: Storage type, must be either 'ephemeral'
                                        or 'persistent-claim'.
                                      type: string
                                  required:
                                  - type
                                  type: object
                                type: array
                            required:
                            - type
                            type: object
                          version:
                            description: The kafka broker version. Defaults to {DefaultKafkaVersion}.
                              Consult the user documentation to understand the process
                              required to upgrade or downgrade the version.
                            type: string
                        required:
                        - listeners
                        - replicas
                        - storage
                        type: object
                      zookeeper:
                        description: Configuration of the ZooKeeper cluster.
                        properties:
                          replicas:
                            description: The number of pods in the cluster.
                            format: int32
                            type: integer
                          storage:
                            description: Storage configuration (disk). Cannot be updated.
                            properties:
                              class:
                                description: The storage class to use for dynamic
                                  volume allocation.
                                type: string
                              deleteClaim:
                                description: Specifies if the persistent volume claim
                                  has to be deleted when the cluster is un-deployed.
                                type: boolean
                              id:
                                description: Storage identification number. It is
                                  mandatory only for storage volumes defined in a
                                  storage of type 'jbod'.
                                format: int32
                                type: integer
                              overrides:
                                description: Overrides for individual brokers. The
                                  `overrides` field allows to specify a different
                                  configuration for different brokers.
                                items:
                                  properties:
                                    broker:
                                      description: Id of the kafka broker (broker
                                        identifier).
                                      format: int32
                                      type: integer
                                    class:
                                      description: The storage class to use for dynamic
                                        volume allocation for this broker.
                                      type: string
                                  type: object
                                type: array
                              selector:
                                description: Specifies a specific persistent volume
                                  to use. It contains key:value pairs representing
                                  labels for selecting such a volume.
                                x-kubernetes-preserve-unknown-fields: true
                              size:
                                description: When type=persistent-claim, defines the
                                  size of the persistent volume claim (i.e 1Gi). Mandatory
                                  when type=persistent-claim.
                                type: string
                              sizeLimit:
                                description: When type=ephemeral, defines the total
                                  amount of local storage required for this EmptyDir
                                  volume (for example 1Gi).
                                type: string
                              type:
                                description: Storage type, must be either 'ephemeral'
                                  or 'persistent-claim'.
                                type: string
                            required:
                            - type
                            type: object
                        required:
                        - replicas
                        - storage
                        type: object
                    required:
                    - kafka
                    - zookeeper
                    type: object
                  topicName:
                    description: The name of the topic.
                    type: string
                  topicSpec:
                    description: InstanceSpec is the Spec section of Kafka topic
                    properties:
                      config:
                        description: The topic configuration.
                        x-kubernetes-preserve-unknown-fields: true
                      partitions:
                        description: The number of partitions the topic should have.
                          This cannot be decreased after topic creation. It can be
                          increased after topic creation, but it is important to understand
                          the consequences that has, especially for topics with semantic
                          partitioning. When absent this will default to the broker
                          configuration for `num.partitions`.
                        format: int32
                        type: integer
                      replicas:
                        description: The number of replicas the topic should have.
                          When absent this will default to the broker configuration
                          for `default.replication.factor`.
                        format: int32
                        type: integer
                    type: object
                type: object
              loki:
                description: Loki contains settings related to the loki configuration.
                  It will create subscription to install Loki Operator. This feature
                  is experimental, use it for development only
                properties:
                  batchSize:
                    default: 102400
                    description: BatchSize is max batch size (in bytes) of logs to
                      accumulate before sending
                    format: int64
                    minimum: 1
                    type: integer
                  batchWait:
                    default: 1s
                    description: BatchWait is max time to wait before sending a batch
                    type: string
                  instanceSpec:
                    description: InstanceSpec is the Spec section of LokiStack instance.
                      Experimental feature. If provided, the Loki operator will be
                      automatically installed. At this moment, the Loki operator itself
                      is experimental and hasn't been officially released by Grafana.
                    properties:
                      enable:
                        default: false
                        description: Should this feature be enabled
                        type: boolean
                      managementState:
                        default: Managed
                        description: ManagementState defines if the CR should be managed
                          by the operator or not. Default is managed.
                        enum:
                        - Managed
                        - Unmanaged
                        type: string
                      replicationFactor:
                        description: ReplicationFactor defines the policy for log
                          stream replication.
                        format: int32
                        minimum: 1
                        type: integer
                      size:
                        description: Size defines one of the support Loki deployment
                          scale out sizes.
                        enum:
                        - 1x.extra-small
                        - 1x.small
                        - 1x.medium
                        type: string
                      storage:
                        description: Storage defines the spec for the object storage
                          endpoint to store logs.
                        properties:
                          secret:
                            description: Secret for object storage authentication.
                              Name of a secret in the same namespace as the cluster
                              logging operator.
                            properties:
                              name:
                                description: Name of a secret in the namespace configured
                                  for object storage secrets.
                                type: string
                              type:
                                description: Type of object storage that should be
                                  used
                                enum:
                                - azure
                                - gcs
                                - s3
                                - swift
                                type: string
                            required:
                            - name
                            - type
                            type: object
                        required:
                        - secret
                        type: object
                      storageClassName:
                        description: Storage class name defines the storage class
                          for ingester/querier PVCs.
                        type: string
                    required:
                    - replicationFactor
                    - size
                    - storage
                    - storageClassName
                    type: object
                  maxBackoff:
                    default: 300s
                    description: MaxBackoff is the maximum backoff time for client
                      connection between retries
                    type: string
                  maxRetries:
                    default: 10
                    description: MaxRetries is the maximum number of retries for client
                      connections
                    format: int32
                    minimum: 0
                    type: integer
                  minBackoff:
                    default: 1s
                    description: MinBackoff is the initial backoff time for client
                      connection between retries
                    type: string
                  querierUrl:
                    description: QuerierURL specifies the address of the Loki querier
                      service, in case it is different from the Loki ingester URL.
                      If empty, the URL value will be used (assuming that the Loki
                      ingester and querier are int he same host). it will be ignored
                      if instanceSpec is specified
                    type: string
                  staticLabels:
                    additionalProperties:
                      type: string
                    default:
                      app: netobserv-flowcollector
                    description: StaticLabels is a map of common labels to set on
                      each flow
                    type: object
                  tenantID:
                    default: netobserv
                    description: TenantID is the Loki X-Scope-OrgID that identifies
                      the tenant for each request. it will be ignored if instanceSpec
                      is specified
                    type: string
                  timeout:
                    default: 10s
                    description: Timeout is the maximum time connection / request
                      limit A Timeout of zero means no timeout.
                    type: string
                  timestampLabel:
                    default: TimeFlowEnd
                    description: TimestampLabel is the label to use for time indexing
                      in Loki. E.g. "TimeReceived", "TimeFlowStart", "TimeFlowEnd".
                    type: string
                  url:
                    default: http://loki:3100/
                    description: URL is the address of an existing Loki service to
                      push the flows to. it will be ignored if instanceSpec is specified
                    type: string
                type: object
              namespace:
                default: ""
                description: Namespace where console plugin and collector pods are
                  going to be deployed. If empty, the namespace of the operator is
                  going to be used
                type: string
              prometheus:
                description: Prometheus contains settings related to the prometheus
                  configuration
                properties:
                  instanceSpec:
                    description: InstanceSpec is the Spec section of Prometheus instance
                    properties:
                      enable:
                        default: false
                        description: Should this feature be enabled
                        type: boolean
                      replicas:
                        description: Number of replicas of each shard to deploy for
                          a Prometheus deployment. Number of replicas multiplied by
                          shards is the total number of Pods created.
                        format: int32
                        type: integer
                    type: object
                type: object
            required:
            - agent
            type: object
          status:
            description: FlowCollectorStatus defines the observed state of FlowCollector
            properties:
              namespace:
                description: Namespace where console plugin and flowlogs-pipeline
                  have been deployed.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
